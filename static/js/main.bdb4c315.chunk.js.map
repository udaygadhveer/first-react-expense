{"version":3,"sources":["components/Ui/Card.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["Card","props","classs","className","children","ExpenseForm","useState","enteredScript","setEnteredScript","enteredPnl","setEnteredPnl","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","name","price","date","Date","onSaveExpenseData","type","value","onChange","target","required","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onChangeFilter","ExpenseItem","month","toLocaleString","day","year","getFullYear","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","dummy","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdb4c315.chunk.js","sourcesContent":["import './cards.css'\n\nfunction Card(props){\n    const classs='card ' + props.className;\n    \n    return (\n        <div className={classs } >{props.children} </div>\n    );\n}\n\nexport default Card;","import React,{useState} from 'react';\n\nimport './ExpenseForm.css'\nfunction ExpenseForm(props ){\n\n    \n    const [enteredScript,setEnteredScript]=useState();\n    const [enteredPnl,setEnteredPnl] =useState();\n    const [enteredDate,setEnteredDate]= useState();\n\n    function scriptChangeHandler(event){\n        setEnteredScript(event.target.value);\n    }\n    function pnlChangeHandler(event){\n        setEnteredPnl(event.target.value);\n    }\n    function dateChangeHandler(event){\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) =>{\n        event.preventDefault();\n        const expenseData={\n            name: enteredScript,\n            price: enteredPnl,\n            date: new Date(enteredDate)\n        };\n        setEnteredScript('');\n        setEnteredPnl('');\n        setEnteredDate('');\n        props.onSaveExpenseData(expenseData);\n    };\n\n    return(\n        <form onSubmit={submitHandler}>\n            <div className='FullForm'>\n                <div className='form'>\n                    <div>\n                        <label>Script*:</label>\n                        <input type='text' value={enteredScript} onChange={scriptChangeHandler} required/>\n                    </div>\n                    <div>\n                        <label>PNL*: </label>\n                        <input type='text' value={enteredPnl} onChange={pnlChangeHandler} required></input>\n                    </div>\n                    <div>\n                        <label>Date*:</label>\n                        <input type='date' value={enteredDate} onChange={dateChangeHandler} required></input>\n                    </div>\n                </div>\n                <div className='b'>\n                    <button type='submit' className='button' >Submit</button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default ExpenseForm;","import React from 'react';\nimport './NewExpense.css'\nimport ExpenseForm from './ExpenseForm.js'\nimport Card from '../Ui/Card';\n\nfunction NewExpense(props){\n\n    function saveExpenseDataHandler(enteredExpenseData){\n         const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n         };\n         props.onAddExpense(expenseData);\n\n    }\n    return(\n        <Card>\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}></ExpenseForm>\n        </Card>\n    );\n}\n\nexport default NewExpense;","import React from 'react'\nimport './ExpensesFilter.css'\n\nconst ExpensesFilter = (props) => {\n\n  const dropdownChangeHandler =(event) =>{\n    props.onChangeFilter(event.target.value)\n  }\n  return (\n    <div  className='ExpensesFilter'>\n      \n          <label>Filter by year:</label>\n          <select className='yearDropdown' value={props.selected} onChange={dropdownChangeHandler} >\n            <option>2019</option>\n            <option>2020</option>\n            <option>2021</option>\n            <option>2022</option>\n          </select>\n      \n    </div>\n  )\n}\n\nexport default ExpensesFilter","import './ExpenseItem.css';\nimport React from 'react';\nimport Card from \"../Ui/Card\"\n\nfunction ExpenseItem(props) {\n\n    const month=props.date.toLocaleString('en-US',{month : 'long'}) ;\n    const day= props.date.toLocaleString('en-US',{day : '2-digit'}) ;\n    const year= props.date.getFullYear();\n\n    // const [name,setName]=useState(props.name);\n    // const whatOnClick = () => {\n    //     // alert('afs');\n    //     setName('!!!!Bhag Bsdk!!!!');\n    // };\n    return (\n        <Card className=\"expense-item\" >\n           \n            <div className='date'>\n                <div className='dateInside'>{day}</div>\n                <div className='dateInside'>{month}</div>\n                <div className='dateInside'>{year}</div>\n            </div>\n            <div className=\"expense-item__description\">\n                <h2>{props.name}</h2>\n                <div className=\"expense-item__price\">{props.price}</div>\n            </div>\n            {/* <button onClick={whatOnClick}>Please </button> */}\n        </Card>\n    );\n}\n\nexport default ExpenseItem;","import React from 'react'\nimport ExpenseItem from './ExpenseItem'\nconst ExpensesList = (props) => {\n\n    if(props.items.length===0){\n        return(\n            <div>\n                Nothing found\n            </div>\n        )\n    }\n  return (\n    <ul>\n        {props.items.map((expense)=>(\n                    <ExpenseItem \n                        key={expense.id}\n                        name={expense.name} \n                        price={expense.price} \n                        date={expense.date}>\n                    </ExpenseItem>\n                ))\n        }\n    </ul>\n  )\n}\n\nexport default ExpensesList","import React from 'react'\nimport './ChartBar.css'\nconst ChartBar = (props) => {\n\n    let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  )\n}\n\nexport default ChartBar","import React from 'react'\nimport ChartBar from './ChartBar.js'\nimport './Chart.css'\nconst Chart = (props) => {\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return (\n        <div className='chart'>\n            {\n                props.dataPoints.map((dataPoint ) => (\n                    <ChartBar \n                        key={dataPoint.label}\n                        value={dataPoint.value}\n                        maxValue={totalMaximum}\n                        label={dataPoint.label}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Chart","import React from 'react'\nimport Chart from '../Chart/Chart'\n\nconst ExpensesChart = (props) => {\n\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n      ];\n\n      for( const expense of props.expenses){\n        const expenseMonth=expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.price;\n      }\n\n\n  return (\n   \n        <Chart dataPoints={chartDataPoints}></Chart>\n\n  )\n}\n\nexport default ExpensesChart","\nimport Card from '../Ui/Card'\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props){\n    const [filteredYear,setFilteredYear]=useState('2022')\n    const filterChangeHandler=selectedYear=>{\n        setFilteredYear(selectedYear)\n    }\n   \n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear;\n      });\n    return(\n        <Card>\n            \n            <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}></ExpensesFilter>\n            <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\n            <ExpensesList items={filteredExpenses} ></ExpensesList>\n            \n\n        </Card>\n    );\n}\n\nexport default Expenses;","import React, {useState} from \"react\";\nimport Card from \"./components/Ui/Card\"\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst dummy = [\n  { \n    id: 1,\n    name: 'NIFTY 15300PE' ,\n    price: 1500,\n    date: new Date(2022,5,13)\n  },\n  { \n    id: 1,\n    name: 'NIFTY 15300PE' ,\n    price: 1500,\n    date: new Date(2021,5,13)\n  },\n  { \n    id: 1,\n    name: 'NIFTY 15300PE' ,\n    price: 1500,\n    date: new Date(2020,5,13)\n  },\n  { \n    id: 1,\n    name: 'NIFTY 15300PE' ,\n    price: 1500,\n    date: new Date(2019,5,13)\n  }\n  \n];\nfunction App() {\n\n\n  const [expenses,setExpenses]=useState(dummy);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <Card className='main'>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </Card>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}